{"version":3,"sources":["Components/GlobalStyles.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","length","map","movie","poster_path","original_title","vote_average","release_date","substring","array","bool","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","updateTerm","handleSubmit","onSubmit","placeholder","value","onChange","show","original_name","first_air_date","func","SearchContainer","event","preventDefault","seacrhByTerm","target","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","genres","genre","index","name","overview","object","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45b27115.chunk.js","sourcesContent":["import {createGlobalStyle} from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20,20,20,1);\n        color:white;\n        padding-top:50px\n\n    }\n\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-weight: 600;\n    font-size: 14px;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.prototype = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏰\n        </span>\n    </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${(props) => props.color};\n`;\n\nconst Message = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${(props) => props.bgUrl});\n    height: 180px;\n    border-radius: 4px;\n    background-size: cover;\n    background-position: center center;\n\n    transition: opacity 0.1s linear;\n`;\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n    line-height: 14px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    /* width: 100%; */\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie = false}) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image\n                    bgUrl={\n                        imageUrl\n                            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                            : \"\"\n                    }\n                />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐️\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title}</Title>\n            {/* <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title> */}\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n    /* margin-top: 20px; */\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => (\n    <>\n        <Helmet>\n            <title>Movies | NetFilx</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"Now Playing\">\n                        {nowPlaying.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"Upcoming Movies\">\n                        {upcoming.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Pupular Movies\">\n                        {popular.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.original_title}\n                                rating={movie.vote_average}\n                                year={movie.release_date.substring(0, 4)}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n            </Container>\n        )}\n    </>\n);\n\nHomePresenter.prototype = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n    params: {\n        api_key: \"cdd485388f6b9eae7296788f2785dd35\",\n        language: \"en-US\",\n    },\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\",\n            },\n        }),\n    search: (term) =>\n        api.get(\"search/movie\", {\n            params: {\n                query: encodeURIComponent(term),\n            },\n        }),\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: \"videos\",\n            },\n        }),\n    search: (term) =>\n        api.get(\"search/tv\", {\n            params: {\n                query: encodeURIComponent(term),\n            },\n        }),\n};\n// https://developers.themoviedb.org/3/movies/get-popular-movies\n// cdd485388f6b9eae7296788f2785dd35\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport axios from \"axios\";\nimport {moviesApi} from \"api\";\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true,\n    };\n    async componentDidMount() {\n        try {\n            const {\n                data: {results: nowPlaying},\n            } = await moviesApi.nowPlaying();\n            const {\n                data: {results: upcoming},\n            } = await moviesApi.upcoming();\n            const {\n                data: {results: popular},\n            } = await moviesApi.popular();\n\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular,\n            });\n        } catch (error) {\n            this.setState({error: \"Cant find movies Info\"});\n        } finally {\n            this.setState({loading: false});\n        }\n    }\n    render() {\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        console.log(nowPlaying, upcoming, popular, error, loading);\n        return (\n            <HomePresenter\n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}\n\n//option + shift +i\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n    margin-bottom: 20px;\n`;\n\nconst Form = styled.form`\n    margin: 50px 0px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults,\n    tvResults,\n    searchTerm,\n    loading,\n    error,\n    updateTerm,\n    handleSubmit,\n}) => (\n    <Container>\n        <Helmet>\n            <title>Search | NetFlix</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input\n                placeholder=\"Search Moives or TV shows\"\n                value={searchTerm}\n                onChange={updateTerm}\n            />\n            {loading ? (\n                <Loader />\n            ) : (\n                <>\n                    {movieResults && movieResults.length > 0 && (\n                        <Section title=\"Movie\">\n                            {movieResults.map((movie) => (\n                                <Poster\n                                    key={movie.id}\n                                    id={movie.id}\n                                    imageUrl={movie.poster_path}\n                                    title={movie.original_title}\n                                    rating={movie.vote_average}\n                                    year={movie.release_date.substring(0, 4)}\n                                    isMovie={true}\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {tvResults && tvResults.length > 0 && (\n                        <Section title=\"TV\">\n                            {tvResults.map((show) => (\n                                <Poster\n                                    key={show.id}\n                                    id={show.id}\n                                    imageUrl={show.poster_path}\n                                    title={show.original_name}\n                                    rating={show.vote_average}\n                                    year={\n                                        show.first_air_date &&\n                                        show.first_air_date.substring(0, 4)\n                                    }\n                                />\n                            ))}\n                        </Section>\n                    )}\n                    {error && <Message color=\"#e74c3c\" text={error} />}\n                    {tvResults &&\n                        movieResults &&\n                        tvResults.length === 0 &&\n                        movieResults.length === 0 && (\n                            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n                        )}\n                </>\n            )}\n        </Form>\n    </Container>\n);\n\nSearchPresenter.prototype = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import {moviesApi, tvApi} from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null,\n    };\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if (searchTerm !== \"\") {\n            this.seacrhByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const {\n            target: {value},\n        } = event;\n        this.setState({\n            searchTerm: value,\n        });\n    };\n    async seacrhByTerm() {\n        const {searchTerm} = this.state;\n        this.setState({loading: true});\n\n        try {\n            const {\n                data: {results: movieResults},\n            } = await moviesApi.search(searchTerm);\n\n            const {\n                data: {results: tvResults},\n            } = await tvApi.search(searchTerm);\n\n            this.setState({\n                movieResults,\n                tvResults,\n            });\n        } catch (error) {\n            this.setState({\n                error: \"Cant find results\",\n            });\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    }\n    render() {\n        const {movieResults, tvResults, searchTerm, loading, error} =\n            this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n    margin-top: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\n    <>\n        <Helmet>\n            <title>TV Shows | NetFlix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={\n                                    show.first_air_date &&\n                                    show.first_air_date.substring(0, 4)\n                                }\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"Popular Shows\">\n                        {popular.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={\n                                    show.first_air_date &&\n                                    show.first_air_date.substring(0, 4)\n                                }\n                            />\n                        ))}\n                    </Section>\n                )}\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"Airing Today\">\n                        {airingToday.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={\n                                    show.first_air_date &&\n                                    show.first_air_date.substring(0, 4)\n                                }\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message title={error} color=\"#e74c3c\" />}\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.prototype = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string.isRequired,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import {tvApi} from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null,\n    };\n    async componentDidMount() {\n        try {\n            const {\n                data: {results: topRated},\n            } = await tvApi.topRated();\n            const {\n                data: {results: popular},\n            } = await tvApi.popular();\n            const {\n                data: {results: airingToday},\n            } = await tvApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday,\n            });\n        } catch (error) {\n            this.setState({\n                error: \"Cant find Tvs info\",\n            });\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    }\n    render() {\n        const {topRated, popular, airingToday, loading, error} = this.state;\n        return (\n            <TVPresenter\n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid\n        ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\nexport default withRouter(({location: {pathname}}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport {Helmet} from \"react-helmet\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    filter: blur(3px);\n    background-image: url(${(props) => props.bgImage});\n    background-size: cover;\n    background-position: center center;\n    z-index: 0;\n    height: 100%;\n    width: 100%;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${(props) => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    font-size: 20px;\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n\n    width: 50%;\n`;\n\nconst DetailPresenter = ({result, loading, error}) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title> Loading | NetFlix</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                    {result.original_title\n                        ? result.original_title\n                        : result.original_name}{\" \"}\n                    | NetFlix\n                </title>\n            </Helmet>\n            <Backdrop\n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            ></Backdrop>\n            <Content>\n                <Cover\n                    bgImage={\n                        result.poster_path\n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            : \"\"\n                    }\n                />\n                <Data>\n                    <Title>\n                        {\" \"}\n                        {result.original_title\n                            ? result.original_title\n                            : result.original_name}\n                    </Title>\n                    <ItemContainer>\n                        <Item>\n                            {result.release_date\n                                ? result.release_date.substring(0, 4)\n                                : result.first_air_date.substring(0, 4)}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {`${result.runtime}min` ||\n                                `${result.episode_run_time}min`}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.genres &&\n                                result.genres.map((genre, index) =>\n                                    index === result.genres.length - 1\n                                        ? genre.name\n                                        : `${genre.name} / `\n                                )}\n                        </Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n        </Container>\n    );\n\nDetailPresenter.prototype = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import {moviesApi, tvApi} from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: {pathname},\n        } = props;\n        // 라우터에서 props을 받아와\n        // pathname을 가져온다\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\"),\n            // Detail Component가 moive와 tv 둘 다 랜더링 하기 때문에\n            // include 메세더르도 url 을 확인해 줘야하낟.\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: {id},\n            },\n            history: {push},\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        try {\n            if (isMovie) {\n                ({data: result} = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({data: result} = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({error: \"Can't find anything.\"});\n        } finally {\n            this.setState({loading: false, result});\n        }\n    }\n    render() {\n        const {result, error, loading} = this.state;\n        console.log(result);\n        return (\n            <DetailPresenter result={result} error={error} loading={loading} />\n        );\n    }\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Route,\n    Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Header from \"./Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/tv\" component={TV} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n    </Router>\n);\n","import React, {Component} from \"react\";\n\nimport GlobalStyles from \"./GlobalStyles\";\nimport Router from \"./Router\";\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Router />\n                <GlobalStyles />\n            </>\n        );\n    }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}